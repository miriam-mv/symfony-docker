{% extends 'base.html.twig' %}


{% block body %}
<style>
    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
</style>



<div class="example-wrapper">
        <h1> Simulador NUPTIC-43</h1>
        <label for="Sname">Nombre Simulacion:</label>
        <input type="text" id="Sname" name="Sname"><br><br>
        <label for="Sname">Nombre Simulador</label>
        <input type="text" id="Sname" name="Sname" disabled value='nuptic-43'><br><br>
        <a class="btn btn-info simulation" >Start Simulation</a>
</div>




  <div class="container">
   <div class="row">
     <div class="col">
      <h4> Ejecuci√≥n </h4>
      <div class="simulation-exe"></div>
     </div>
     <div class="col">
     <h4> Resultado </h4>
     <canvas id="speedChart"></canvas>
     <div class="simulation-result"></div>
      <div></div>
     </div>
   </div>
 </div>

 <script>



var intervalSim=null;
var intervalGraph=null;
var num_simulacion =1;
var lineChart =null;

 function getRandomInt(min, max) {
   return Math.floor(Math.random() * (max - min)) + min;
 }
 function generateSimulation(id_sim, index) {

   let direcciones = ["Norte", "Sur", "Este","Oeste" ];

   let sim = {id_simulacion:id_sim,nombre_simulador:"nuptic-43",num:index,
   direccion: direcciones[getRandomInt(0,4)],recorrido: getRandomInt(10,20)}

   return sim;

 }


 function doTheThing(sim) {
   return new Promise((resolve, reject) => {
     $.ajax({
      method:"POST",
      url: 'peticion',
      data:sim,
      dataType: "json",

       success: function (data) {
         resolve(data)
       },
       error: function (error) {
         reject(error)
       },
     })
   });
 }


async function ajaxGetRecorrido(id_sim){
   return $.ajax({
     method:"POST",
     url: 'simulacion_recorrido',
     data:{
       id_simulacion: id_sim,
       nombre_simulador : "nuptic-43"
      },
     dataType: "json",

     success:function(data) {
       if(data) {
         $('.simulation-result').append("<div> La suma del recorrido es "+data+"</div> ");
       }
     }, error: function(data){
       $('.simulation-result').append("<div> Error,no se ha podido calcular</div> ");

     }
    });
}

async function ajaxDireccion(id_sim){
   return $.ajax({
     method:"POST",
     url: 'simulacion_direccion',
     data:{
       id_simulacion: id_sim,
       nombre_simulador : "nuptic-43"     },
     dataType: "json",

     success:function(data) {
       if(data) {
         $('.simulation-result').append("<div>La direccion mas frequente es  "+data[0]["direccion"]+"</div> ");
         return data;

       }
     }, error: function(data){
       $('.simulation-result').append("<div> Error,no se ha podido calcular</div> ");
       return data;

     }
    });
}

function makePetiton(id_sim,i){
  num_simulacion++;

   var sim = generateSimulation(id_sim,i);
   result= doTheThing(sim,num_simulacion).then(function(data,textStatus, jqXHR){
      $('.simulation-exe').append("<div> Simulacion num "+i+" ejecutada</div> ");

    }).catch(function(jqXHR, textStatus, errorThrown){
      $('.simulation-exe').append("<div> Error, intentando otra vez</div> ");
      console.log( error);
      makePetiton(id_sim,i);
    })


}

function showResults(id_sim){
  ajaxGetRecorrido(id_sim);
  ajaxDireccion(id_sim);
  modGraph(id_sim);
}


function createGraph(id_sim){

  var speedCanvas = document.getElementById("speedChart");
  $.ajax({
    method:"POST",
    url: 'simulacion_peticiones',
    data:{
     id_simulacion: id_sim,
     nombre_simulador : "nuptic-43"
    },
    dataType: "json",

    success:function(data) {
      if(data) {
        array_data= [];
        array_labels= [];
        data.forEach(i => {
          array_labels.push(i['num']);
          array_data.push(i['recorrido']);

        });

        var speedData = {
          labels: array_labels,
          datasets: [{
            label: "Recorrido",
            data: array_data,
          }]
        };

        var chartOptions = {
          legend: {
            display: true,
            position: 'top',
            labels: {
              boxWidth: 80,
              fontColor: 'black'
            }
          }
        };

        lineChart = new Chart(speedCanvas, {
          type: 'line',
          data: speedData,
          options: chartOptions
        });      }
    }, error: function(data){
        console.log("error + "+data);

    }
   });



}

function modGraph(id_sim){
  //remove
  lineChart.data.labels.pop();
  lineChart.data.datasets.forEach((dataset) => {
      dataset.data.pop();
  });
  lineChart.update();

  $.ajax({
    method:"POST",
    url: 'simulacion_peticiones',
    data:{
     id_simulacion: id_sim,
     nombre_simulador : "nuptic-43"
    },
    dataType: "json",

    success:function(data) {
      if(data) {
        array_data= [];
        array_labels= [];
        data.forEach(i => {
          array_labels.push(i['num']);
          array_data.push(i['recorrido']);

        });
      //add
        var speedData = {
            labels: array_labels,
            datasets: [{
              label: "Recorrido",
              data: array_data,
            }]
          };

        lineChart.data=speedData;
        lineChart.update();
      }
    }
  });

}



 $(document).ready(function () {

   $( ".simulation" ).on( "click", function(e) {
         e.preventDefault();
         var $link = $(e.currentTarget);
         id_sim= $("#Sname").val();
         if(id_sim =="") id_sim= getRandomInt(0,400);
         $('.simulation-exe').html("");

         intervalSim = setInterval(function () {
            makePetiton(id_sim,num_simulacion);
            if(num_simulacion>60) {
              clearInterval(intervalSim);
              showResults(id_sim);
            }
        }, 1000);
        createGraph(id_sim);

        intervalGraph= setInterval(function () {
            modGraph(id_sim);
            if(num_simulacion>60 ) {
              clearInterval(intervalGraph);
            }
        }, 5000);

    });
});
</script>


{% endblock %}
